class MedianFinder {
    static PriorityQueue<Integer> pqmax;
    static PriorityQueue<Integer> pqmin;
    double median;
    public MedianFinder() {
        median = 0;
        pqmax = new PriorityQueue<>(Collections.reverseOrder());
        pqmin = new PriorityQueue<>();
    }
    public void addNum(int num) {
        if(pqmax.isEmpty() && pqmin.isEmpty())
            pqmax.add(num);
        else{
            if(num <= median)
                pqmax.add(num);
            else
                pqmin.add(num);
            if(pqmax.size() - pqmin.size() > 1)
                pqmin.add(pqmax.poll());
            if(pqmin.size() - pqmax.size() > 1)
                pqmax.add(pqmin.poll());
        }
        median = findMedian();
    }
    public double findMedian() {
        if(pqmax.size() - pqmin.size() == 1)
            return (double)pqmax.peek();
        else if(pqmin.size() - pqmax.size() == 1)
            return (double)pqmin.peek();
        else{
            int num1 = pqmax.peek();
            int num2 = pqmin.peek();
            median = (double)(num1 + num2)/2;
            return median;
        }
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */