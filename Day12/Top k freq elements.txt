class pair implements Comparable<pair>{
    int key;
    int freq;
    pair(int key,int freq){
        this.key = key;
        this.freq = freq;
    }
    public int compareTo(pair o){
        if(this.freq < o.freq)
            return 1;
        else if(this.freq == o.freq)
            return 0;
        else
            return -1;
    }
}
class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Map<Integer,Integer> m = new HashMap<>();
        for(int i=0;i<nums.length;i++){
            if(!m.containsKey(nums[i]))
                m.put(nums[i],1);
            else
                m.put(nums[i],m.get(nums[i])+1);
        }
        pair[] p = new pair[m.size()];
        int idx = 0;
        for(int i: m.keySet())
            p[idx++] = new pair(i,m.get(i));
        Arrays.sort(p);
        int[] res = new int[k];
        for(int i=0;i<k;i++)
            res[i] = p[i].key;
        return res;
    }
}