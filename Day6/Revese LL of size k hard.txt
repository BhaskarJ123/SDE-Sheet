/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        int len = 0;
        ListNode temp = head;
        while(temp!=null){
            len++;
            temp = temp.next;
        }
        ListNode buffer = new ListNode();
        buffer.next = head;
        ListNode slow = buffer, fast = buffer;
        while(len>=k){
            temp = slow.next;
            fast = temp.next;
            for(int i=1;i<k;i++){
                temp.next = fast.next;
                fast.next = slow.next;
                slow.next = fast;
                fast = temp.next;
            }
            slow = temp;
            len-= k;
        }
        return buffer.next;
    }
}