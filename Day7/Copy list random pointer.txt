/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        Map<Node,Node> map = new HashMap<>();
        Node temp = head;
        Node headt = new Node(0);
        Node tempt = headt;
        Map<Node,Node> mp = new HashMap<>();
        while(temp!=null){
            tempt.next = new Node(temp.val);
            tempt = tempt.next;
            mp.put(temp,tempt);
            temp = temp.next;
        }
        headt = headt.next;
        temp = head;
        tempt = headt;
        while(temp!=null){
            if(temp.random == null)
                tempt.random = null;
            else{
                Node t = temp.random;
                tempt.random = mp.get(t);
            }
            temp = temp.next;
            tempt = tempt.next;
        }
        return headt;
    }
}